{"version":3,"file":"static/js/614.5e06bd8a.chunk.js","mappings":"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","sources":["components/button/index.tsx","components/button/styles.tsx","store/categories/category.selector.ts","components/product-card/styles.tsx","components/product-card/index.tsx","components/category-preview/styles.tsx","components/category-preview/index.tsx","components/search-bar/styles.tsx","components/search-bar/index.tsx","components/filter-dropdown/styles.tsx","components/filter-dropdown/index.tsx","routes/categories-preview/styles.tsx","routes/categories-preview/index.tsx","routes/category/styles.tsx","routes/category/index.tsx","routes/shop/index.tsx","store/cart/cart.selector.ts"],"sourcesContent":["import { FC, ButtonHTMLAttributes } from 'react';\r\n\r\nimport {\r\n    BaseButton,\r\n    InvertedButton,\r\n    ButtonSpinner,\r\n} from './styles';\r\n\r\nexport enum BUTTON_TYPE_CLASSES {\r\n    base = 'base',\r\n    inverted = 'inverted',\r\n}\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton =>\r\n({\r\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\r\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\r\n}[buttonType]);\r\n\r\nexport type ButtonProps = {\r\n    buttonType?: BUTTON_TYPE_CLASSES;\r\n    isLoading?: boolean;\r\n} & ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button: FC<ButtonProps> = ({\r\n    children,\r\n    buttonType,\r\n    isLoading,\r\n    ...otherProps\r\n}) => {\r\n    const CustomButton = getButton(buttonType);\r\n    return (\r\n        <CustomButton disabled={isLoading} {...otherProps}>\r\n            {isLoading ? <ButtonSpinner /> : children}\r\n        </CustomButton>\r\n    );\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nimport { SpinnerContainer } from '../spinner/styles';\r\n\r\nexport const BaseButton = styled.button`\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  font-size: 15px;\r\n  background-color: black;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-family: 'Open Sans Condensed';\r\n  font-weight: bolder;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    width: fit-content;\r\n    min-width: unset;\r\n    padding: 0 5px;\r\n    font-size: 12px;\r\n    height: fit-content;\r\n    line-height: 30px;\r\n  }\r\n`;\r\n\r\nBaseButton.displayName = 'BaseButton';\r\n\r\nexport const InvertedButton = styled(BaseButton)`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nInvertedButton.displayName = 'InvertedButton';\r\n\r\nexport const ButtonSpinner = styled(SpinnerContainer)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nButtonSpinner.displayName = 'ButtonSpinner';","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from '../store';\r\nimport { CategoriesState } from './category.reducer';\r\nimport { CategoryMap } from './category.types';\r\n\r\nconst selectCategoryReducer = (state: RootState): CategoriesState =>\r\n    state.categories;\r\n\r\nexport const selectCategories = createSelector(\r\n    [selectCategoryReducer],\r\n    (categoriesSlice) => categoriesSlice.categories\r\n);\r\n\r\nexport const selectCategoriesMap = createSelector(\r\n    [selectCategories],\r\n    (categories): CategoryMap =>\r\n        categories.reduce((acc, category) => {\r\n            const { title, items } = category;\r\n            acc[title.toLowerCase()] = items;\r\n            return acc;\r\n        }, {} as CategoryMap)\r\n);\r\n\r\nexport const selectCategoriesIsLoading = createSelector(\r\n    [selectCategoryReducer],\r\n    (categoriesSlice) => categoriesSlice.isLoading\r\n);","import styled from \"styled-components\";\r\n\r\nexport const Description = styled.div`\r\n  position: absolute;\r\n  top: 100px;\r\n  width: 80%;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease-in-out;\r\n`;\r\n\r\nexport const ProductCartContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 90%;\r\n    object-fit: cover;\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0);\r\n      transition: background 0.3s ease-in-out;\r\n      z-index: 2;\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 80%;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    top: 255px;\r\n    display: none;\r\n    z-index: 3;\r\n  }\r\n\r\n  &:hover {\r\n    img {\r\n      opacity: 0.4;\r\n    }\r\n\r\n    ${Description} {\r\n      opacity: 1;\r\n      z-index: 3;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    button {\r\n      display: block;\r\n      opacity: 0.9;\r\n      min-width: unset;\r\n      padding: 0 10px;\r\n      font-size: 13px;\r\n    }\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    button {    \r\n      font-size: 10px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    button {    \r\n      font-size: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 16px;\r\n    flex-direction: column;\r\n  }\r\n\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const Price = styled.div`\r\n  width: 10%;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\n","import { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCartItems } from '../../store/cart/cart.selector';\r\nimport { addItemToCart } from '../../store/cart/cart.action';\r\nimport { CategoryItem } from '../../store/categories/category.types';\r\nimport Button, { BUTTON_TYPE_CLASSES } from '../button';\r\nimport {\r\n    ProductCartContainer,\r\n    Footer,\r\n    Name,\r\n    Price,\r\n    Description\r\n} from './styles';\r\n\r\ntype ProductCardProps = {\r\n    product: CategoryItem;\r\n};\r\n\r\nconst ProductCard: FC<ProductCardProps> = ({ product }) => {\r\n    const { name, description, price, imageUrl } = product;\r\n    const dispatch = useDispatch();\r\n    const cartItems = useSelector(selectCartItems);\r\n\r\n    const addProductToCart = () => dispatch(addItemToCart(cartItems, product));\r\n\r\n    return (\r\n        <ProductCartContainer>\r\n            <img src={imageUrl} alt={`${name}`} />\r\n            <Footer>\r\n                <Name>{name}</Name>\r\n                <Price>{`$${price}`}</Price>\r\n            </Footer>\r\n            <Description>{description}</Description>\r\n            <Button\r\n                buttonType={BUTTON_TYPE_CLASSES.inverted}\r\n                onClick={addProductToCart}\r\n            >\r\n                Add to card\r\n            </Button>\r\n        </ProductCartContainer>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CategoryPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Link)`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Preview = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  column-gap: 20px;\r\n  row-gap: 30px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 15px;\r\n    grid-row-gap: 50px;\r\n  }\r\n`;","import { FC } from 'react';\r\nimport ProductCard from '../product-card';\r\nimport {\r\n    CategoryPreviewContainer,\r\n    Title,\r\n    Preview,\r\n} from './styles';\r\nimport { CategoryItem } from '../../store/categories/category.types';\r\n\r\ntype CategoryPreviewProps = {\r\n    title: string;\r\n    products: CategoryItem[];\r\n};\r\n\r\nconst CategoryPreview: FC<CategoryPreviewProps> = ({ title, products }) => {\r\n    return (\r\n        <CategoryPreviewContainer>\r\n            <h2>\r\n                <Title to={title}>{title.toUpperCase()}</Title>\r\n            </h2>\r\n            <Preview>\r\n                {products\r\n                    .map((product) => (\r\n                        <ProductCard key={product.id} product={product} />\r\n                    ))}\r\n            </Preview>\r\n        </CategoryPreviewContainer>\r\n    );\r\n};\r\n\r\nexport default CategoryPreview;","import styled from 'styled-components';\r\n\r\nexport const SearchBox = styled.input`\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n`;\r\n","import { ChangeEvent, FC } from 'react';\r\nimport { SearchBox } from './styles';\r\n\r\ninterface SearchBarProps {\r\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const SearchBar: FC<SearchBarProps> = ({ onChange }) => (\r\n    <SearchBox placeholder=\"Search product\" onChange={onChange} />\r\n);","import styled from 'styled-components';\r\n\r\nexport const CategoryDropdown = styled.select`\r\n  flex: 1;\r\n  margin-left: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n`;","import { ChangeEvent, FC } from 'react';\r\nimport { CategoryDropdown as Dropdown } from './styles';\r\n\r\ninterface CategoryDropdownProps {\r\n    categories: string[];\r\n    onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nexport const CategoryDropdown: FC<CategoryDropdownProps> = ({ categories, onChange }) => (\r\n    <Dropdown onChange={onChange}>\r\n        <option value=\"\">All categories</option>\r\n        {categories.map((title) => (\r\n            <option key={title} value={title}>\r\n                {title}\r\n            </option>\r\n        ))}\r\n    </Dropdown>\r\n);","import styled from 'styled-components';\r\n\r\nexport const CategoryContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  column-gap: 20px;\r\n  row-gap: 50px;\r\n`;\r\n\r\nexport const FilterGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 38px;\r\n  margin-bottom: 25px;\r\n  text-align: center;\r\n`;","import { useState, Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    selectCategoriesMap,\r\n    selectCategoriesIsLoading,\r\n} from '../../store/categories/category.selector';\r\nimport CategoryPreview from '../../components/category-preview';\r\nimport Spinner from '../../components/spinner';\r\nimport { SearchBar } from '../../components/search-bar';\r\nimport { CategoryDropdown } from '../../components/filter-dropdown';\r\nimport { FilterGroup } from './styles';\r\n\r\nconst CategoriesPreview = () => {\r\n    const categoriesMap = useSelector(selectCategoriesMap);\r\n    const isLoading = useSelector(selectCategoriesIsLoading);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n\r\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleCategoryChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setSelectedCategory(event.target.value);\r\n    };\r\n\r\n    const filteredCategories = Object.keys(categoriesMap)\r\n        .filter((title) => categoriesMap[title].some(product =>\r\n            product.name.toLowerCase().includes(searchTerm.toLowerCase())))\r\n        .map((title) => ({\r\n            title,\r\n            products: categoriesMap[title].filter(product =>\r\n                product.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        }))\r\n        .filter((category) => !selectedCategory || category.title === selectedCategory);\r\n\r\n    return (\r\n        <Fragment>\r\n            <FilterGroup>\r\n                <SearchBar onChange={handleSearchChange} />\r\n                <CategoryDropdown categories={Object.keys(categoriesMap)} onChange={handleCategoryChange} />\r\n            </FilterGroup>\r\n            {isLoading ? (\r\n                <Spinner />\r\n            ) : (\r\n                filteredCategories.map((category) => {\r\n                    const { title, products } = category;\r\n                    // Check if products is an array before passing it to CategoryPreview\r\n                    if (Array.isArray(products)) {\r\n                        return (\r\n                            <CategoryPreview key={title} title={title} products={products} />\r\n                        );\r\n                    } else {\r\n                        console.error(`products for title ${title} is not an array:`, products);\r\n                        return null;\r\n                    }\r\n                })\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CategoriesPreview;","import styled from 'styled-components';\r\n\r\nexport const CategoryContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  column-gap: 20px;\r\n  row-gap: 50px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 38px;\r\n  margin-bottom: 25px;\r\n  text-align: center;\r\n`;","import { useState, useEffect, Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ProductCard from '../../components/product-card';\r\nimport Spinner from '../../components/spinner';\r\n\r\nimport {\r\n    selectCategoriesMap,\r\n    selectCategoriesIsLoading,\r\n} from '../../store/categories/category.selector';\r\n\r\nimport { CategoryContainer, Title } from './styles';\r\n\r\ntype CategoryRouteParams = {\r\n    category: string;\r\n};\r\n\r\nconst Category = () => {\r\n    const { category } = useParams<\r\n        keyof CategoryRouteParams\r\n    >() as CategoryRouteParams;\r\n    const categoriesMap = useSelector(selectCategoriesMap);\r\n    const isLoading = useSelector(selectCategoriesIsLoading);\r\n    const [products, setProducts] = useState(categoriesMap[category]);\r\n\r\n    useEffect(() => {\r\n        setProducts(categoriesMap[category]);\r\n    }, [category, categoriesMap]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Title>{category.toUpperCase()}</Title>\r\n            {isLoading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <CategoryContainer>\r\n                    {products &&\r\n                        products.map((product) => (\r\n                            <ProductCard key={product.id} product={product} />\r\n                        ))}\r\n                </CategoryContainer>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Category;","import { useEffect } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport CategoriesPreview from '../categories-preview';\r\nimport Category from '../category';\r\nimport { fetchCategoriesStart } from '../../store/categories/category.action';\r\n\r\nconst Shop = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCategoriesStart());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <Routes>\r\n            <Route index element={<CategoriesPreview />} />\r\n            <Route path=':category' element={<Category />} />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default Shop;","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from '../store';\r\n\r\nimport { CartState } from './cart.reducer';\r\n\r\nconst selectCartReducer = (state: RootState): CartState => state.cart;\r\n\r\nexport const selectCartItems = createSelector(\r\n    [selectCartReducer],\r\n    (cart) => cart.cartItems\r\n);\r\n\r\nexport const selectIsCartOpen = createSelector(\r\n    [selectCartReducer],\r\n    (cart) => cart.isCartOpen\r\n);\r\n\r\nexport const selectCartCount = createSelector([selectCartItems], (cartItems) =>\r\n    cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\r\n);\r\n\r\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\r\n    cartItems.reduce(\r\n        (total, cartItem) => total + cartItem.quantity * cartItem.price,\r\n        0\r\n    )\r\n);"],"names":["BUTTON_TYPE_CLASSES","_ref","children","buttonType","isLoading","otherProps","CustomButton","arguments","length","undefined","base","BaseButton","inverted","InvertedButton","getButton","_jsx","disabled","ButtonSpinner","styled","button","_templateObject","_taggedTemplateLiteral","displayName","_templateObject2","SpinnerContainer","_templateObject3","selectCategoryReducer","state","categories","selectCategories","createSelector","categoriesSlice","selectCategoriesMap","reduce","acc","category","title","items","toLowerCase","selectCategoriesIsLoading","Description","div","ProductCartContainer","Footer","Name","_templateObject4","Price","_templateObject5","product","name","description","price","imageUrl","dispatch","useDispatch","cartItems","useSelector","selectCartItems","_jsxs","src","alt","concat","Button","onClick","addProductToCart","addItemToCart","CategoryPreviewContainer","Title","Link","Preview","products","to","toUpperCase","map","ProductCard","id","SearchBox","input","SearchBar","onChange","placeholder","CategoryDropdown","select","Dropdown","value","FilterGroup","h2","CategoriesPreview","categoriesMap","searchTerm","setSearchTerm","useState","selectedCategory","setSelectedCategory","filteredCategories","Object","keys","filter","some","includes","Fragment","event","target","Spinner","Array","isArray","CategoryPreview","console","error","CategoryContainer","Category","useParams","setProducts","useEffect","Shop","fetchCategoriesStart","Routes","Route","index","element","path","selectCartReducer","cart","selectIsCartOpen","isCartOpen","selectCartCount","total","cartItem","quantity"],"sourceRoot":""}